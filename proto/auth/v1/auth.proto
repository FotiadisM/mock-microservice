syntax = "proto3";

package auth.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

enum UserType {
  USER_TYPE_UNSPECIFIED = 0;
  USER_TYPE_APPLICANT = 1;
  USER_TYPE_COMPANY = 2;
}

message RegisterRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {max_len: 128}];
  UserType user_type = 3 [(validate.rules).enum = {
    in: [
      1,
      2
    ]
  }];
}

message RegisterResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message LoginRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {max_len: 128}];
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/auth/register"
      body: "*"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }
  rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {get: "/v1/auth/logout"};
  }
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/refresh"
      body: "*"
    };
  }
}
