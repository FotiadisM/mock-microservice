syntax = "proto3";

package auth.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";

enum UserType {
  USER_TYPE_UNSPECIFIED = 0;
  USER_TYPE_APPLICANT = 1;
  USER_TYPE_COMPANY = 2;
}

message RegisterRequest {
  string email = 1 [(buf.validate.field).string.email = true];
  string password = 2 [(buf.validate.field).string.min_len = 8];
  UserType user_type = 3 [(buf.validate.field).enum = {
    not_in: [0]
    defined_only: true
  }];
}

message RegisterResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message LogoutRequest {}
message LogoutResponse {}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message ThrowPanicRequest {}
message ThrowPanicResponse {}

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/auth/register"
      body: "*"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {get: "/v1/auth/logout"};
  }
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/refresh"
      body: "*"
    };
  }
  rpc ThrowPanic(ThrowPanicRequest) returns (ThrowPanicResponse) {}
}
