syntax = "proto3";

package book.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message Error {
  string code = 1;
  string name = 2;
  string description = 3;
}

message ErrorResponse {
  Error error = 1;
}

message Author {
  string id = 1;
  string name = 2;
  string bio = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

// Author rpcs

message GetAuthorRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
}
message GetAuthorResponse {
  Author author = 1;
}

message ListAuthorsRequest {}
message ListAuthorsResponse {
  repeated Author authors = 1;
}

message CreateAuthorRequest {
  string name = 1 [(buf.validate.field).required = true];
  string bio = 2;
}
message CreateAuthorResponse {
  Author author = 1;
}

message UpdateAuthorRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
  optional string name = 2;
  optional string bio = 3;
}
message UpdateAuthorResponse {
  Author author = 1;
}

message DeleteAuthorRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
}
message DeleteAuthorResponse {}

// Book rpcs

message Book {
  string id = 1;
  string title = 2;
  string author_id = 3;
  string description = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message GetBookRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
}
message GetBookResponse {
  Book book = 1;
}

message ListBooksRequest {}
message ListBooksResponse {
  repeated Book books = 1;
}

message CreateBookRequest {
  string title = 1 [(buf.validate.field).required = true];
  string author_id = 2 [(buf.validate.field).string.uuid = true];
  string description = 3;
}
message CreateBookResponse {
  Book book = 1;
}

message UpdateBookRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
  optional string title = 2;
  optional string description = 3;
}
message UpdateBookResponse {
  Book book = 1;
}

message DeleteBookRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
}
message DeleteBookResponse {}

// Review rpcs

message BookReview {
  string id = 1;
  string book_id = 2;
  int32 rating = 3;
  string text = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateBookReviewRequest {
  string book_id = 1 [(buf.validate.field).string.uuid = true];
  int32 rating = 2 [
    (buf.validate.field).int32.gte = 0,
    (buf.validate.field).int32.lte = 5
  ];
  string text = 3;
}
message CreateBookReviewResponse {
  BookReview review = 1;
}
// Example rpcs

message ThrowPanicRequest {}
message ThrowPanicResponse {}

message ThrowServiceErrorRequest {}
message ThrowServiceErrorResponse {}

service BookService {
  // Author rpcs
  rpc GetAuthor(GetAuthorRequest) returns (GetAuthorResponse) {
    option (google.api.http) = {get: "/v1/authors/{id}"};
  }
  rpc ListAuthors(ListAuthorsRequest) returns (ListAuthorsResponse) {
    option (google.api.http) = {get: "/v1/authors"};
  }
  rpc CreateAuthor(CreateAuthorRequest) returns (CreateAuthorResponse) {
    option (google.api.http) = {
      post: "/v1/authors"
      body: "*"
    };
  }
  rpc UpdateAuthor(UpdateAuthorRequest) returns (UpdateAuthorResponse) {
    option (google.api.http) = {
      patch: "/v1/authors/{id}"
      body: "*"
    };
  }
  rpc DeleteAuthor(DeleteAuthorRequest) returns (DeleteAuthorResponse) {
    option (google.api.http) = {delete: "/v1/authors/{id}"};
  }

  // Book rpcs
  rpc GetBook(GetBookRequest) returns (GetBookResponse) {
    option (google.api.http) = {get: "/v1/books/{id}"};
  }
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    option (google.api.http) = {get: "/v1/books"};
  }
  rpc CreateBook(CreateBookRequest) returns (CreateBookResponse) {
    option (google.api.http) = {
      post: "/v1/books"
      body: "*"
    };
  }
  rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse) {
    option (google.api.http) = {
      patch: "/v1/books/{id}"
      body: "*"
    };
  }
  rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse) {
    option (google.api.http) = {delete: "/v1/books/{id}"};
  }

  // Review rpc
  rpc CreateBookReview(CreateBookReviewRequest) returns (CreateBookReviewResponse) {
    option (google.api.http) = {
      post: "/v1/books/{book_id}/reviews"
      body: "*"
    };
  }

  // Exampl rpcs
  rpc ThrowPanic(ThrowPanicRequest) returns (ThrowPanicResponse) {}
  rpc ThrowServiceError(ThrowServiceErrorRequest) returns (ThrowServiceErrorResponse) {}
}
